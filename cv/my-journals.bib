
@article{Schwinger2008,
	title = {A {Survey} on {Web} {Modeling} {Approaches} for {Ubiquitous} {Web} {Applications}},
	volume = {4},
	copyright = {All rights reserved},
	issn = {1744-0084},
	url = {http://www.emeraldinsight.com/10.1108/17440080810901089},
	doi = {10.1108/17440080810901089},
	abstract = {Web},
	number = {3},
	journal = {International Journal of Web Information Systems},
	author = {Schwinger, Wieland and Retschitzegger, Werner and Schauerhuber, Andrea and Kappel, Gerti and Wimmer, Manuel and Pröll, Birgit and Castro, Cristina Cachero and Casteleyn, Sven and Troyer, Olga De and Fraternali, Piero and Garrigos, Irene and Garzotto, Franca and Ginige, Athula and Houben, Geert-Jan and Koch, Nora and Moreno, Nathalie and Pastor, Oscar and Paolini, Paolo and Ferragud, Vicente Pelechano and Rossi, Gustavo and Schwabe, Daniel and Tisi, Massimo and Vallecillo, Antonio and Sluijs, Kees Van Der and Zhang, Gefei},
	year = {2008},
	keywords = {web, computer applications, customization, internet, paper type general review, user interfaces, my-journal},
	pages = {234--305},
	file = {PDF:/Users/max/Zotero/storage/E7VJFDEG/Schwinger et al. - 2008 - A Survey on Web Modeling Approaches for Ubiquitous Web Applications.pdf:application/pdf},
}

@article{Hidaka2016,
	title = {Feature-based classification of bidirectional transformation approaches},
	volume = {15},
	copyright = {All rights reserved},
	issn = {16191374},
	doi = {10.1007/s10270-014-0450-0},
	abstract = {Bidirectional model transformation is a key technology in model-driven engineering (MDE), when two models that can change over time have to be kept constantly consistent with each other. While several model transformation tools include at least a partial support to bidirectionality, it is not clear how these bidirectional capabilities relate to each other and to similar classical problems in computer science, from the view update problem in databases to bidirectional graph transformations. This paper tries to clarify and visualize the space of design choices for bidirectional transformations from an MDE point of view, in the form of a feature model. The selected list of existing approaches are characterized by mapping them to the feature model. Then, the feature model is used to highlight some unexplored research lines in bidirectional transformations.},
	number = {3},
	journal = {Software and Systems Modeling},
	author = {Hidaka, Soichiro and Tisi, Massimo and Cabot, Jordi and Hu, Zhenjiang},
	year = {2016},
	keywords = {Bidirectional transformation, Domain analysis, Feature model, no-example, atlgt, my-journal},
	pages = {907--928},
	file = {PDF:/Users/max/Zotero/storage/TKMN45PA/Hidaka et al. - 2016 - Feature-based classification of bidirectional transformation approaches.pdf:application/pdf},
}

@article{Cabot2011,
	title = {The {MDE} diploma: first international postgraduate specialization in model-driven engineering},
	volume = {23},
	copyright = {All rights reserved},
	url = {http://www.tandfonline.com/doi/abs/10.1080/08993408.2011.630131},
	doi = {10.1080/0899340YYxxxxxxxx},
	urldate = {2014-09-15},
	journal = {Computer Science Education},
	author = {Cabot, J and Tisi, M},
	year = {2011},
	keywords = {mde, bloom, learning progression, mastery, neo-piagetian, proficiency, programming fundamentals, my-journal},
	file = {PDF:/Users/max/Zotero/storage/ANHJU78P/Cabot, Tisi - 2011 - The MDE diploma first international postgraduate specialization in model-driven engineering.pdf:application/pdf},
}

@article{Ed-Douibi2015,
	title = {{EMF}-{REST} {Generation} of {RESTful} {APIs} from {Models}},
	volume = {abs/1504.0},
	copyright = {All rights reserved},
	url = {http://arxiv.org/abs/1504.03498},
	doi = {10.1145/2851613.2851782},
	abstract = {In the last years, there has been an increasing interest for Model-Driven Engineering (MDE) solutions in the Web. Web-based modeling solutions can leverage on better support for distributed management (i.e., the Cloud) and collaboration. However, current modeling environments and frameworks are usually restricted to desktop-based scenarios and therefore their capabilities to move to the Web are still very limited. In this paper we present an approach to generate Web APIs out of models, thus paving the way for managing models and collaborating on them online. The approach, called EMF-REST, takes Eclipse Modeling Framework (EMF) data models as input and generates Web APIs following the REST principles and relying on well-known libraries and standards, thus facilitating its comprehension and maintainability. Also, EMF-REST integrates model and Web-specific features to provide model validation and security capabilities, respectively, to the generated API.},
	journal = {Proceedings of the ACM Symposium on Applied Computing},
	author = {Ed-Douibi, Hamza and Izquierdo, J.L.C. Javier Luis Cánovas and G?mez, A. and Tisi, Massimo and Cabot, Jordi and Gómez, Abel and Tisi, Massimo and Cabot, Jordi},
	year = {2015},
	note = {ISBN: 9781450337397},
	keywords = {domain-specific languages, mde, model-driven engineering, all or part of, or hard copies of, permission to make digital, [Domain-specific languages, emf, EMF, Model-Driven Engi, model-driven web engineering, rest, this work for, my-journal},
	pages = {39--43},
	file = {Full Text:/Users/max/Zotero/storage/YNGKCS7M/Ed-Douibi et al. - 2015 - EMF-REST Generation of RESTful APIs from Models.pdf:application/pdf},
}

@article{Martinez2017,
	title = {Reactive model transformation with {ATL}},
	volume = {136},
	copyright = {All rights reserved},
	issn = {01676423},
	doi = {10.1016/j.scico.2016.08.006},
	abstract = {Model-driven applications may maintain large networks of structured data models and transformations among them. The development of such applications is complicated by the need to reflect on the whole network any runtime update performed on models or transformation logic. If not carefully designed, the execution of such updates may be computationally expensive. In this paper we propose a reactive paradigm for programming model transformations, and we implement a reactive model-transformation engine. We argue that this paradigm facilitates the development of autonomous model-driven systems that react to update and request events from the host application by identifying and performing only the needed computation. We implement such approach by providing a reactive engine for the ATL transformation language. We evaluate the usage scenarios that this paradigm supports and we experimentally measure its ability to reduce computation time in transformation-based applications.},
	journal = {Science of Computer Programming},
	author = {Martínez, Salvador and Tisi, Massimo and Douence, Rémi},
	year = {2017},
	keywords = {Model-driven engineering, Model transformations, Reactive programming, c2r, reactiveatl, my-journal},
	pages = {1--16},
	file = {PDF:/Users/max/Zotero/storage/QGT2ISXD/Martínez, Tisi, Douence - 2017 - Reactive model transformation with ATL.pdf:application/pdf},
}

@article{Kolovos2015,
	title = {{MONDO}: {Scalable} {Modelling} and model management on the cloud},
	volume = {1400},
	copyright = {All rights reserved},
	issn = {16130073},
	abstract = {Achieving scalability in modelling and MDE involves being able to construct large models and domain-specific languages in a systematic manner, enabling teams of modellers to construct and refine large models in collaboration, advancing the state of the art in model querying and transformations tools so that they can cope with large models (of the scale of millions of model elements), and providing an infrastructure for efficient storage, indexing and retrieval of large models. This paper outlines how MONDO, a collaborative EC-funded project, contributes to tackling some of these scalability-related challenges.},
	journal = {CEUR Workshop Proceedings},
	author = {Kolovos, D.S. and Rose, L.M. and Paige, R.F. and Guerra, E. and Cuadrado, J.S. and De Lara, J. and R?th, I. and Varr?, D. and Suny?, G. and Tisi, M.},
	year = {2015},
	keywords = {mde, no-example, my-journal},
	file = {PDF:/Users/max/Zotero/storage/BPXWQXHT/Kolovos et al. - 2016 - MONDO Scalable Modelling and Model Management on the Cloud.pdf:application/pdf;PDF:/Users/max/Zotero/storage/4I65Y6TY/Kolovos et al. - 2015 - MONDO Scalable Modelling and model management on the cloud.pdf:application/pdf},
}

@article{Fraternali2011,
	title = {Using traceability links and higher-order transformations for easing regression testing of web applications},
	volume = {10},
	copyright = {All rights reserved},
	issn = {15409589},
	abstract = {For Model-Driven Engineering to become widely accepted by developers, it is necessary that its principles and techniques be applied not only to the generation of code from Plat- form Independent Models (PIMs), but more generally to all the phases of the software life-cycle. This paper focuses on the use of PIMs to support automation in the regression testing phase of a system; the proposed framework lets developers record and replay testing sessions and investigate testing failures at the level of their PIMs; this is made possible by traceability links automatically weaved into the generated code, whereby developers can follow application execution at the model level. Such traceability links are created by a modified version of the code generation transformation, automatically produced by means of a Higher-Order Transformation (HOT). A HOT is a transformation that takes as input a transformation (the original code generator) and creates another transformation (the code generator capable of producing traceability links). The HOT weaves into the code generator additional rules producing traceability clues that help developers link any error to the model features likely to cause it. This approach is particularly helpful in the Web context, where code generation transformations must follow changes in the technology and presentation styles. Using HOTs ensures the automatic evolution of the transformation for traceability links when the code generation transformation changes. \&copy; Rinton Press.},
	number = {1},
	journal = {Journal of Web Engineering},
	author = {Fraternali, Piero and Tisi, Massimo},
	year = {2011},
	keywords = {web, Automation, Life cycle, Models, Network components, Pr, my-journal},
	pages = {1--20},
	file = {PDF:/Users/max/Zotero/storage/KMU3Q5JL/Fraternali, Tisi - 2011 - Using Traceability Links and Higher Order Transformations for Easying Regression Testing of Web Applications.pdf:application/pdf},
}

@article{danielNeoEMFMultidatabaseModel2017,
	title = {{NeoEMF}: {A} multi-database model persistence framework for very large models},
	volume = {149},
	copyright = {All rights reserved},
	issn = {01676423},
	shorttitle = {{NeoEMF}},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0167642317301600},
	doi = {10.1016/j.scico.2017.08.002},
	language = {en},
	urldate = {2020-02-24},
	journal = {Science of Computer Programming},
	author = {Daniel, Gwendal and Sunyé, Gerson and Benelallam, Amine and Tisi, Massimo and Vernageau, Yoann and Gómez, Abel and Cabot, Jordi},
	month = dec,
	year = {2017},
	keywords = {neoemf, my-journal},
	pages = {9--14},
	file = {Submitted Version:/Users/max/Zotero/storage/I26R8KJI/Daniel et al. - 2017 - NeoEMF A multi-database model persistence framewo.pdf:application/pdf},
}

@article{chengCoqTLCoqDSL2020,
	title = {{CoqTL}: a {Coq} {DSL} for rule-based model transformation},
	volume = {19},
	copyright = {All rights reserved},
	issn = {1619-1366, 1619-1374},
	shorttitle = {{CoqTL}},
	url = {http://link.springer.com/10.1007/s10270-019-00765-6},
	doi = {10.1007/s10270-019-00765-6},
	abstract = {In model-driven engineering, model transformation (MT) veriﬁcation is essential for reliably producing software artifacts. While recent advancements have enabled automatic Hoare-style veriﬁcation for non-trivial MTs, there are certain veriﬁcation tasks (e.g. induction) that are intrinsically diﬃcult to automate. Existing tools that aim at simplifying the interactive veriﬁcation of MTs typically translate the MT speciﬁcation (e.g. in ATL) and properties to prove (e.g. in OCL) into an interactive theorem prover. However, since the MT speciﬁcation and proof phases happen in separate languages, the proof developer needs a detailed knowledge of the translation logic. Naturally, any error in the MT translation could cause unsound veriﬁcation, i.e. the MT executed in the original environment may have diﬀerent semantics from the veriﬁed MT.},
	language = {en},
	number = {2},
	urldate = {2020-05-13},
	journal = {Software and Systems Modeling},
	author = {Cheng, Zheng and Tisi, Massimo and Douence, Rémi},
	month = mar,
	year = {2020},
	keywords = {c2r, coqtl, my-journal},
	pages = {425--439},
	file = {Cheng et al. - 2020 - CoqTL a Coq DSL for rule-based model transformati.pdf:/Users/max/Zotero/storage/XL75YULH/Cheng et al. - 2020 - CoqTL a Coq DSL for rule-based model transformati.pdf:application/pdf},
}

@article{benelallamDistributingRelationalModel2018,
	title = {Distributing relational model transformation on {MapReduce}},
	volume = {142},
	copyright = {All rights reserved},
	issn = {01641212},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0164121218300669},
	doi = {10.1016/j.jss.2018.04.014},
	abstract = {MDE has been successfully adopted in the production of software for several domains. As the models that need to be handled in MDE grow in scale, it becomes necessary to design scalable algorithms for model transformation (MT) as well as suitable frameworks for storing and retrieving models eﬃciently. One way to cope with scalability is to exploit the wide availability of distributed clusters in the Cloud for the parallel execution of MT. However, because of the dense interconnectivity of models and the complexity of transformation logic, the eﬃcient use of these solutions in distributed model processing and persistence is not trivial.},
	language = {en},
	urldate = {2022-05-07},
	journal = {Journal of Systems and Software},
	author = {Benelallam, Amine and Gómez, Abel and Tisi, Massimo and Cabot, Jordi},
	month = aug,
	year = {2018},
	keywords = {ATL, Model Transformation, Distributed Computing, MapReduce, NeoEMF, atlmr, my-journal},
	pages = {1--20},
	file = {Benelallam et al. - 2018 - Distributing relational model transformation on Ma.pdf:/Users/max/Zotero/storage/DZQLNX93/Benelallam et al. - 2018 - Distributing relational model transformation on Ma.pdf:application/pdf},
}

@article{bezierslafosseSourceCodeLevelRegression2019,
	title = {Source-{Code} {Level} {Regression} {Test} {Selection}: the {Model}-{Driven} {Way}.},
	volume = {18},
	copyright = {All rights reserved},
	issn = {1660-1769},
	shorttitle = {Source-{Code} {Level} {Regression} {Test} {Selection}},
	url = {http://www.jot.fm/contents/issue_2019_02/article13.html},
	doi = {10.5381/jot.2019.18.2.a13},
	abstract = {In order to ensure that existing functionalities have not been impacted by recent program changes, test cases are regularly executed during regression testing (RT) phases. The RT time becomes problematic as the number of test cases is growing. Regression test selection (RTS) aims at running only the test cases that have been impacted by recent changes. RTS reduces the duration of regression testing and hence its cost. In this paper, we present a model-driven approach for RTS. Execution traces are gathered at runtime, and injected in a static source-code model. We use this resulting model to identify and select all the test cases that have been impacted by changes between two revisions of the program. Our MDE approach allows modularity in the granularity of changes considered. In addition, it oﬀers better reusability than existing RTS techniques: the trace model is persistent and standardised. Furthermore, it enables more interoperability with other model-driven tools, enabling further analysis at diﬀerent levels of abstraction (e.g. energy consumption).},
	language = {en},
	number = {2},
	urldate = {2022-05-07},
	journal = {The Journal of Object Technology},
	author = {Béziers la Fosse, Thibault and Mottu, Jean-Marie and Tisi, Massimo and Sunyé, Sunyé},
	year = {2019},
	keywords = {testing, Model Driven Engineering, Execution Trace, Regression Test Selection, Regression Testing, my-journal},
	pages = {13:1},
	file = {Béziers la Fosse et al. - 2019 - Source-Code Level Regression Test Selection the M.pdf:/Users/max/Zotero/storage/DSJMKSRW/Béziers la Fosse et al. - 2019 - Source-Code Level Regression Test Selection the M.pdf:application/pdf},
}

@article{hinkelCrosstechnologyBenchmarkIncremental2022,
	title = {A cross-technology benchmark for incremental graph queries},
	volume = {21},
	copyright = {All rights reserved},
	issn = {1619-1366, 1619-1374},
	url = {https://link.springer.com/10.1007/s10270-021-00927-5},
	doi = {10.1007/s10270-021-00927-5},
	abstract = {To cope with the increased complexity of systems, models are used to capture what is considered the essence of a system. Such models are typically represented as a graph, which is queried to gain insight into the modelled system. Often, the results of these queries need to be adjusted according to updated requirements and are therefore a subject of maintenance activities. It is thus necessary to support writing model queries with adequate languages. However, in order to stay meaningful, the analysis results need to be refreshed as soon as the underlying models change. Therefore, a good execution speed is mandatory in order to cope with frequent model changes. In this paper, we propose a benchmark to assess model query technologies in the presence of model change sequences in the domain of social media. We present solutions to this benchmark in a variety of 11 different tools and compare them with respect to explicitness of incrementalization, asymptotic complexity and performance.},
	language = {en},
	number = {2},
	urldate = {2022-05-07},
	journal = {Software and Systems Modeling},
	author = {Hinkel, Georg and Garcia-Dominguez, Antonio and Schöne, René and Boronat, Artur and Tisi, Massimo and Le Calvar, Théo and Jouault, Frederic and Marton, József and Nyíri, Tamás and Antal, János Benjamin and Elekes, Márton and Szárnyas, Gábor},
	month = apr,
	year = {2022},
	keywords = {case-study, my-journal},
	pages = {755--804},
	file = {Hinkel et al. - 2022 - A cross-technology benchmark for incremental graph.pdf:/Users/max/Zotero/storage/L4R28M97/Hinkel et al. - 2022 - A cross-technology benchmark for incremental graph.pdf:application/pdf},
}

@article{chengDeepSpecificationProof2022,
	title = {Deep specification and proof preservation for the {CoqTL} transformation language},
	copyright = {All rights reserved},
	issn = {1619-1366, 1619-1374},
	url = {https://link.springer.com/10.1007/s10270-022-01004-1},
	doi = {10.1007/s10270-022-01004-1},
	abstract = {Executable engines for relational model-transformation languages evolve continuously because of language extension, performance improvement and bug fixes. While new versions generally change the engine semantics, end-users expect to get backward-compatibility guarantees, so that existing transformations do not need to be adapted at every engine update.},
	language = {en},
	urldate = {2022-05-07},
	journal = {Software and Systems Modeling},
	author = {Cheng, Zheng and Tisi, Massimo},
	month = may,
	year = {2022},
	keywords = {Model Transformation, Coq, MDE, c2r, Certification, Programming Language Implementation, Theorem Proving, coqtl, my-journal},
	file = {Cheng and Tisi - 2022 - Deep specification and proof preservation for the .pdf:/Users/max/Zotero/storage/8CYVSIU8/Cheng and Tisi - 2022 - Deep specification and proof preservation for the .pdf:application/pdf},
}

@article{chengSlicingATLModel2018,
	title = {Slicing {ATL} model transformations for scalable deductive verification and fault localization},
	volume = {20},
	copyright = {All rights reserved},
	issn = {1433-2779, 1433-2787},
	url = {http://link.springer.com/10.1007/s10009-018-0491-8},
	doi = {10.1007/s10009-018-0491-8},
	abstract = {Model-driven engineering (MDE) is increasingly accepted in industry as an effective approach for managing the full life cycle of software development. In MDE, software models are manipulated, evolved and translated by model transformations (MT), up to code generation. Automatic deductive veriﬁcation techniques have been proposed to guarantee that transformations satisfy correctness requirements (encoded as transformation contracts). However, to be transferable to industry, these techniques need to be scalable and provide the user with easily accessible feedback.},
	language = {en},
	number = {6},
	urldate = {2022-05-07},
	journal = {International Journal on Software Tools for Technology Transfer},
	author = {Cheng, Zheng and Tisi, Massimo},
	month = nov,
	year = {2018},
	keywords = {veriatl, my-journal},
	pages = {645--663},
	file = {Cheng and Tisi - 2018 - Slicing ATL model transformations for scalable ded.pdf:/Users/max/Zotero/storage/3JV43HJ6/Cheng and Tisi - 2018 - Slicing ATL model transformations for scalable ded.pdf:application/pdf},
}

@article{bucchiaroneWhatFutureModeling2021,
	title = {What {Is} the {Future} of {Modeling}?},
	volume = {38},
	copyright = {All rights reserved},
	issn = {0740-7459, 1937-4194},
	url = {https://ieeexplore.ieee.org/document/9354405/},
	doi = {10.1109/MS.2020.3041522},
	language = {en},
	number = {2},
	urldate = {2022-12-30},
	journal = {IEEE Software},
	author = {Bucchiarone, Antonio and Ciccozzi, Federico and Lambers, Leen and Pierantonio, Alfonso and Tichy, Matthias and Tisi, Massimo and Wortmann, Andreas and Zaytsev, Vadim},
	month = mar,
	year = {2021},
	keywords = {low-code, Research Roadmap, Software Modelling, Success Stories, my-journal},
	pages = {119--127},
	file = {Bucchiarone et al. - 2021 - What Is the Future of Modeling.pdf:/Users/max/Zotero/storage/NUN8U89P/Bucchiarone et al. - 2021 - What Is the Future of Modeling.pdf:application/pdf;Full Text:/Users/max/Zotero/storage/AGGF46PL/Bucchiarone et al. - 2021 - What is the Future of Modelling .pdf:application/pdf},
}

@article{diruscioLowcodeDevelopmentModeldriven2022,
	title = {Low-code development and model-driven engineering: {Two} sides of the same coin?},
	volume = {21},
	copyright = {All rights reserved},
	issn = {1619-1366, 1619-1374},
	shorttitle = {Low-code development and model-driven engineering},
	url = {https://link.springer.com/10.1007/s10270-021-00970-2},
	doi = {10.1007/s10270-021-00970-2},
	abstract = {The last few years have witnessed a signiﬁcant growth of so-called low-code development platforms (LCDPs) both in gaining traction on the market and attracting interest from academia. LCDPs are advertised as visual development platforms, typically running on the cloud, reducing the need for manual coding and also targeting non-professional programmers. Since LCDPs share many of the goals and features of model-driven engineering approaches, it is a common point of debate whether lowcode is just a new buzzword for model-driven technologies, or whether the two terms refer to genuinely distinct approaches. To contribute to this discussion, in this expert-voice paper, we compare and contrast low-code and model-driven approaches, identifying their differences and commonalities, analysing their strong and weak points, and proposing directions for crosspollination.},
	language = {en},
	number = {2},
	urldate = {2022-12-30},
	journal = {Software and Systems Modeling},
	author = {Di Ruscio, Davide and Kolovos, Dimitris and de Lara, Juan and Pierantonio, Alfonso and Tisi, Massimo and Wimmer, Manuel},
	month = apr,
	year = {2022},
	keywords = {Model-driven engineering, low-code, Low-code development, No-code development, my-journal},
	pages = {437--446},
	file = {Di Ruscio et al. - 2022 - Low-code development and model-driven engineering.pdf:/Users/max/Zotero/storage/F89W63Q8/Di Ruscio et al. - 2022 - Low-code development and model-driven engineering.pdf:application/pdf},
}

@article{dehghaniFacilitatingMigrationMicroservice2022,
	title = {Facilitating the {Migration} to the {Microservice} {Architecture} via {Model}-{Driven} {Reverse} {Engineering} and {Reinforcement} {Learning}},
	volume = {21},
	copyright = {All rights reserved},
	url = {https://hal.archives-ouvertes.fr/hal-03916547},
	doi = {10.1007/s10270-022-00977-3},
	number = {3},
	urldate = {2023-01-07},
	journal = {Software and Systems Modeling},
	author = {Dehghani, Mohammadhadi and Kolahdouz-Rahimi, Shekoufeh and Tisi, Massimo and Tamzalit, Dalila},
	month = jun,
	year = {2022},
	note = {Publisher: Springer Verlag},
	keywords = {Migration, Microservice Architecture, Model-Driven Reverse Engineering, Reinforcement Learning, my-journal},
	pages = {1115--1133},
	file = {Full Text:/Users/max/Zotero/storage/PAJXWEYJ/Dehghani et al. - 2022 - Facilitating the Migration to the Microservice Arc.pdf:application/pdf},
}

@article{berrouyneModelDrivenMethodologyAccelerate2022,
	title = {A {Model}-{Driven} {Methodology} to {Accelerate} {Software} {Engineering} in the {Internet} of {Things}},
	volume = {9},
	copyright = {All rights reserved},
	url = {https://hal.archives-ouvertes.fr/hal-03916558},
	doi = {10.1109/JIOT.2022.3170500},
	number = {20},
	urldate = {2023-01-07},
	journal = {IEEE Internet of Things Journal},
	author = {Berrouyne, Imad and Adda, Mehdi and Mottu, Jean-Marie and Tisi, Massimo},
	month = oct,
	year = {2022},
	note = {Publisher: IEEE},
	keywords = {Model Transformation, Model-Driven Engineering, Code Generation, Software Engineering, Internet of Things, Policy Enforcement, my-journal},
	pages = {19757--19772},
	file = {Full Text:/Users/max/Zotero/storage/9WV5MCDR/Berrouyne et al. - 2022 - A Model-Driven Methodology to Accelerate Software .pdf:application/pdf},
}

@article{enetProtocolBasedInteractiveDebugging2023,
	title = {Protocol-{Based} {Interactive} {Debugging} for {Domain}-{Specific} {Languages}},
	volume = {22},
	copyright = {All rights reserved},
	url = {https://hal.science/hal-04124727},
	abstract = {Interactive debuggers are established tools used by developers to understand programs and localize faults. They are equally valuable in the context of model-driven development, when working on executable behavioral models. However, development costs of interactive debuggers for Domain-Specific Languages (DSLs) can be significant. In order to mitigate these costs, several reusable DSL-agnostic debugging solutions have been proposed. We argue that the applicability of these solutions is limited by being tied to a fixed set of debugging services, a specific language engineering approach, or a particular user interface. In this paper, we present a novel approach to provide interactive debugging services for executable DSLs through a reusable generic architecture. We propose a protocol allowing a generic interactive debugger to communicate with heterogeneous DSL runtimes, both for controlling the execution and for configuring the debugger with domain-specific breakpoints. The proposed debugger can itself be controlled using a reinterpretation of the Debug Adapter Protocol (DAP), for an effortless integration in existing Integrated Development Environments (IDEs) that support it. Using a prototype implementation based on JSON-RPC and two heterogeneous DSL runtimes, we show that our approach provides an off-the-shelf reusable interactive debugger that supports meaningful domain-specific breakpoints, and that can be used with minimal effort within an IDE such as Visual Studio Code.},
	language = {en},
	number = {2},
	urldate = {2023-06-21},
	journal = {The Journal of Object Technology},
	author = {Enet, Josselin and Bousse, Erwan and Tisi, Massimo and Sunyé, Gerson},
	year = {2023},
	keywords = {my-journal},
	file = {Enet et al. - 2023 - Protocol-Based Interactive Debugging for Domain-Sp.pdf:/Users/max/Zotero/storage/UTMPVL2J/Enet et al. - 2023 - Protocol-Based Interactive Debugging for Domain-Sp.pdf:application/pdf},
}

@article{pontes_miranda_integrating_2024,
	series = {The 20th {European} {Conference} on {Modelling} {Foundations} and {Applications} ({ECMFA} 2024)},
	title = {Integrating the {Support} for {Machine} {Learning} of {Inter}-{Model} {Relations} in {Model} {Views}},
	volume = {23},
	url = {https://hal.science/hal-04557378},
	doi = {10.5381/jot.2024.23.3.a4},
	abstract = {Model-driven engineering (MDE) supports the engineering of complex systems via multiple models representing various aspects of the system. These interrelated models are usually heterogeneous and specified using complementary modeling languages. Thus, model-view solutions can be employed to federate these models more transparently. Inter-model links in model views can sometimes be automatically computed via explicitly written matching rules. However, in some cases, matching rules would be too complex (or even impossible) to write, but inter-model links may be inferred by analyzing previous examples instead. In this paper, we propose a Machine Learning (ML)-backed approach for expressing and computing such model views. Notably, we aim at making the use of ML in this context as simple as possible. To this end, we refined and extended the ViewPoint Definition Language (VPDL) from the EMF Views model-view solution to integrate the use of dedicated Heterogeneous Graph Neural Networks (HGNNs). These view-specific HGNNs are trained with appropriate sets of contributing models before being used for inferring links to be added to the views. We validated our approach by implementing a prototype combining EMF Views with PyEcore and PyTorch Geometric. Our experiments show promising results regarding the ease-of-use of our approach and the relevance of the inferred inter-model links.},
	number = {3},
	urldate = {2024-08-16},
	journal = {The Journal of Object Technology},
	author = {Pontes Miranda, James and Bruneliere, Hugo and Tisi, Massimo and Sunyé, Gerson},
	month = jul,
	year = {2024},
	note = {Publisher: Chair of Software Engineering},
	keywords = {Machine Learning, MDE, my-journal, Modeling languages, Graph Neural Networks, Model Views},
	pages = {1--14},
	file = {PDF:/Users/max/Zotero/storage/CL9H58IS/Pontes Miranda et al. - 2024 - Integrating the Support for Machine Learning of Inter-Model Relations in Model Views.pdf:application/pdf},
}

@article{cohen_automated_2024,
	title = {Automated {Proof} {Tactics} for {Model} {Transformation}},
	volume = {23},
	issn = {1660-1769},
	url = {http://www.jot.fm/contents/issue_2024_03/article1.html},
	doi = {10.5381/jot.2024.23.3.a1},
	language = {en},
	number = {3},
	urldate = {2024-08-27},
	journal = {The Journal of Object Technology},
	author = {Cohen, Julien and Tisi, Massimo and Douence, Remi},
	year = {2024},
	keywords = {my-journal},
	pages = {3:1},
	file = {PDF:/Users/max/Zotero/storage/586WLEIR/Cohen et al. - 2024 - Automated Proof Tactics for Model Transformation..pdf:application/pdf},
}
