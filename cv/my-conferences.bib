
@inproceedings{brambilla_transformation_2008,
	title = {A transformation framework to bridge domain specific languages to {MDA}},
	volume = {5421},
	copyright = {All rights reserved},
	isbn = {978-3-642-01647-9},
	doi = {10.1007/978-3-642-01648-6_18},
	abstract = {The Model Driven Architecture aims at the integration of different modeling languages, artifacts and tools in a unified technical space. Pre-existing development methodologies based on Domain Specific Languages (DSL) require a complex process to benefit from this integration. After a MOF metamodel for the DSL is defined, there is no standard methodology to move legacy models and tools to the new architecture. This paper proposes a general model-driven integration procedure for pre-MDA DSLs. The procedure, given the definition of suitable model transformations, is completely automatic. The proposed framework is fully implemented, in a way independent of the specific DSL that must be transformed. As a case study, a toolsuite based on WebML, a DSL for designing Web applications, is bridged to MDA.},
	urldate = {2011-08-19},
	booktitle = {Lecture {Notes} in {Computer} {Science} (including subseries {Lecture} {Notes} in {Artificial} {Intelligence} and {Lecture} {Notes} in {Bioinformatics})},
	publisher = {Lecture Notes In Computer Science, Springer},
	author = {Brambilla, Marco and Fraternali, Piero and Tisi, Massimo},
	year = {2009},
	keywords = {web, my-conference},
	pages = {167--180},
	file = {PDF:/Users/max/Zotero/storage/WK7UKWPI/Brambilla, Fraternali, Tisi - 2009 - A transformation framework to bridge domain specific languages to MDA.pdf:application/pdf},
}

@inproceedings{acerbis_developing_2007,
	title = {Developing {eBusiness} {Solutions} with a {Model} {Driven} {Approach}: {The} {Case} of {Acer} {EMEA}},
	volume = {4607},
	copyright = {All rights reserved},
	shorttitle = {Developing {eBusiness} {Solutions} with a {Model} {Driven}},
	booktitle = {Proceedings of {ICWE2007}},
	publisher = {LNCS},
	author = {Acerbis, R. and Bongio, A. and Brambilla, M. and Tisi, Massimo and Ceri, S. and Tosetti, E.},
	year = {2007},
	keywords = {web, my-conference},
	pages = {539},
	file = {PDF:/Users/max/Zotero/storage/EZNW3FC7/Acerbis et al. - 2007 - Developing eBusiness Solutions with a Model Driven Approach The Case of Acer EMEA.pdf:application/pdf},
}

@inproceedings{fraternali_developing_2006,
	title = {Developing {eBusiness} {Solutions} with a {Model} {Driven} {Approach}},
	copyright = {All rights reserved},
	booktitle = {Proceedings of {IMP2006}},
	author = {Fraternali, Piero and Ceri, Stefano and Tisi, Massimo and Tosetti, Emanuele},
	year = {2006},
	keywords = {web, my-conference},
	file = {PDF:/Users/max/Zotero/storage/TXQU6MUA/Fraternali et al. - 2006 - Developing eBusiness Solutions with a Model Driven Approach.pdf:application/pdf},
}

@inproceedings{DBLP:conf/ecmdafa/TisiJFCB09,
	title = {On the {Use} of {Higher}-{Order} {Model} {Transformations}},
	copyright = {All rights reserved},
	booktitle = {Proceedings of the {Fifth} {European} {Conference} on {Model}-{Driven} {Architecture} {Foundations} and {Applications} ({ECMDA})},
	publisher = {Springer},
	author = {Tisi, Massimo and Jouault, F. and Fraternali, P. and Ceri, S. and Bézivin, J.},
	year = {2009},
	keywords = {no-example, hot, my-conference},
	pages = {18--33},
	file = {PDF:/Users/max/Zotero/storage/U7BZJ638/Tisi et al. - 2009 - On the Use of Higher-Order Model Transformations.pdf:application/pdf},
}

@inproceedings{fraternali_identifying_2008,
	title = {Identifying {Cultural} {Markers} for {Web} {Application} {Design} {Targeted} to a {Multi}-cultural {Audience}},
	copyright = {All rights reserved},
	url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4577887},
	doi = {10.1109/ICWE.2008.34},
	booktitle = {Eigth {International} {Conference} on {Web} {Engineering}},
	publisher = {Ieee},
	author = {Fraternali, Piero and Tisi, Massimo},
	month = jul,
	year = {2008},
	keywords = {web, my-conference},
	pages = {231--239},
	file = {PDF:/Users/max/Zotero/storage/STY6UNMD/Fraternali, Tisi - 2008 - Identifying Cultural Markers for Web Application Design Targeted to a Multi-cultural Audience.pdf:application/pdf},
}

@inproceedings{brambilla_marginalized_2008,
	title = {{ICT} {Education} as a {Key} {Emancipation} {Factor} for {Young} {People} in {Marginal} {Quarters} of {Developing} {Countries}},
	copyright = {All rights reserved},
	booktitle = {Marginalized {Young} {People}: {Inclusion} {Through} {ICT}, workshop at {IDC2008}},
	author = {Brambilla, Marco and Fraternali, Piero and Silva, Matteo and Tisi, Massimo},
	year = {2008},
	keywords = {web, acm classification keywords, developing countries, ict education, marginal quarters, my-conference},
	pages = {1--4},
	file = {PDF:/Users/max/Zotero/storage/4HGJCUYG/Brambilla et al. - 2008 - ICT Education as a Key Emancipation Factor for Young People in Marginal Quarters of Developing Countries.pdf:application/pdf},
}

@inproceedings{Jouault2010,
	title = {Towards incremental execution of {ATL} transformations},
	copyright = {All rights reserved},
	doi = {10.1007/978-3-642-13688-7_9},
	urldate = {2010-11-02},
	booktitle = {Theory and {Practice} of {Model} {Transformations}},
	publisher = {Springer},
	author = {Jouault, Frédéric and Tisi, Massimo},
	year = {2010},
	keywords = {c2r, reactiveatl, my-conference},
	pages = {123--137},
	file = {PDF:/Users/max/Zotero/storage/IBF399T3/Jouault, Tisi - 2010 - Towards incremental execution of ATL transformations.pdf:application/pdf},
}

@inproceedings{Tisi2010a,
	title = {Improving higher-order transformations support in {ATL}},
	volume = {6142 LNCS},
	copyright = {All rights reserved},
	isbn = {3-642-13687-7},
	doi = {10.1007/978-3-642-13688-7_15},
	abstract = {In Model-Driven Engineering (MDE), Higher-Order Transformations (HOTs) are model transformations that analyze, produce or manipulate other model transformations. In a previous survey we classiﬁed them, and showed their usefulness in diﬀerent MDE scenarios. However, writing HOTs is generally considered a time-consuming and error-prone task, and often results in verbose code. In this paper we present several proposals to facilitate the deﬁnition of HOTs in ATL. Each proposal focuses on a speciﬁc kind of scenario. We validate our proposals by assessing their impact over the full list of HOTs described in the survey.},
	urldate = {2011-02-17},
	booktitle = {Lecture {Notes} in {Computer} {Science} (including subseries {Lecture} {Notes} in {Artificial} {Intelligence} and {Lecture} {Notes} in {Bioinformatics})},
	publisher = {Springer},
	author = {Tisi, Massimo and Cabot, Jordi and Jouault, Frédéric},
	year = {2010},
	keywords = {no-example, hot, my-conference},
	pages = {215--229},
	file = {PDF:/Users/max/Zotero/storage/NEBW883F/Tisi, Cabot, Jouault - 2010 - Improving higher-order transformations support in ATL.pdf:application/pdf},
}

@inproceedings{Brambilla2010,
	title = {Search computing: {A} model-driven perspective},
	volume = {6142 LNCS},
	copyright = {All rights reserved},
	isbn = {3-642-13687-7},
	doi = {10.1007/978-3-642-13688-7_1},
	abstract = {Search Computing is a novel discipline that focuses on exploratory search of multi-domain Web queries like "Where can I attend an interesting conference in my field close to a sunny beach?". The approach is based on the interaction between cooperating search services, using ranking and joining of results as the dominant factors for service composition. This paper sketches the main characteristics of search computing and discusses how software engineering and model-driven engineering are challenged by the search computing problems. We present Search Computing applications from a model-driven perspective, in terms of (1) the models describing the objects of interest, (2) the specification of applications through model transformations, and (3) the definition of a domain specific language (DSL) defined for the specification of search query plans. This work provides a first exploration of MDE approaches applied to search computing and poses a set of challenges to the model transformation community.},
	urldate = {2011-02-17},
	booktitle = {Lecture {Notes} in {Computer} {Science} (including subseries {Lecture} {Notes} in {Artificial} {Intelligence} and {Lecture} {Notes} in {Bioinformatics})},
	publisher = {Springer},
	author = {Brambilla, Marco and Ceri, Stefano and Tisi, Massimo},
	year = {2010},
	keywords = {web, model transformations, ATL, conceptual models, MDD, Search Computing, search engine, software engineering, my-conference},
	pages = {1--15},
	file = {PDF:/Users/max/Zotero/storage/IFVSXF6I/Brambilla, Ceri, Tisi - 2010 - Search computing A model-driven perspective.pdf:application/pdf},
}

@inproceedings{DBLP:conf/icwe/FraternaliT09,
	title = {A higher order generative framework for weaving traceability links into a code generator for web application testing},
	volume = {5648 LNCS},
	copyright = {All rights reserved},
	isbn = {3-642-02817-9},
	doi = {10.1007/978-3-642-02818-2_28},
	abstract = {Model Driven Engineering is extending its reach beyond the generation of code from Platform Independent Models (\{PIMs\}), to all the phases of the software life-cycle. This paper presents an approach to exploit \{PIMs\} to ease regression testing, whereby developers can record and replay testing sessions and investigate testing failures on the application model, thanks to traceability links automatically inserted in the generated code. The core of the approach is a modified version of the model transformation for code generation, obtained by applying a Higher Order Transformation (\{HOT\}), that is a transformation that takes in input a transformation (the original code generator) and produces another transformation (the augmented code generator). The \{HOT\} weaves into the code generator additional rules producing traceability clues that help developers link any error to the model features likely to cause it. © 2009 Springer Berlin Heidelberg.},
	booktitle = {International {Conference} on {Web} {Engineering}},
	author = {Fraternali, Piero and Tisi, Massimo},
	year = {2009},
	note = {ISSN: 03029743},
	keywords = {web, my-conference},
	pages = {340--354},
	file = {PDF:/Users/max/Zotero/storage/RSXZX4YC/Fraternali, Tisi - 2009 - A higher order generative framework for weaving traceability links into a code generator for web application t.pdf:application/pdf},
}

@inproceedings{TISI:2011:INRIA-00609458:1,
	address = {Wellington, Nouvelle-Zélande},
	title = {Lazy execution of model-to-model transformations},
	volume = {6981 LNCS},
	copyright = {All rights reserved},
	isbn = {978-3-642-24484-1},
	doi = {10.1007/978-3-642-24485-8_4},
	abstract = {The increasing adoption of Model-Driven Engineering in industrial contexts highlights scalability as a critical limitation of several MDE tools. Most of the current model-to-model transformation engines have been designed for one-shot translation of input models to output models, and present efficiency issues when applied to very large models. In this paper, we study the application of a lazy-evaluation approach to model transformations. We present a lazy execution algorithm for ATL, and we empirically evaluate a prototype implementation. With it, the elements of the target model are generated only when (and if) they are accessed, enabling also transformations that generate infinite target models. We achieve our goal on a significant subset of ATL by extending the ATL compiler.},
	booktitle = {Model {Driven} {Engineering} {Languages} and {Systems}, 14th {International} {Conference}, {MODELS} 2011},
	author = {Tisi, Massimo and Martínez, Salvador and Jouault, Frédéric and Cabot, Jordi},
	month = oct,
	year = {2011},
	note = {ISSN: 03029743},
	keywords = {c2r, reactiveatl, my-conference},
	pages = {32--46},
	file = {PDF:/Users/max/Zotero/storage/Q9RUWFLF/Tisi et al. - 2011 - Lazy execution of model-to-model transformations.pdf:application/pdf},
}

@inproceedings{baresi_towards_2005,
	title = {Towards model-driven testing of a {Web} application generator},
	volume = {3579},
	copyright = {All rights reserved},
	isbn = {3-540-27996-2},
	url = {http://books.google.com/books?hl=en&lr=&id=T-WXeUZWdX8C&oi=fnd&pg=PA75&dq=%22massimo+tisi&ots=s3fV-3Xz8a&sig=z0rckf8sYAaFN_u6DekMLp3uJys},
	doi = {10.1007/11531371_13},
	abstract = {Conceptual modelling is a promising approach for Web application development, thanks to innovative \{CASE\} tools that can transform high-level specifications into executable code. So far, the impact of conceptual modelling has been evaluated mostly on analysis and design. This paper addresses its influence on testing, one of the most important and effort-consuming phases, by investigating how the traditional notions of testing carry over to the problem of verifying the correctness of Web applications produced by model-driven code generators. The paper examines an industrial case study carried out in a software factory where code generators are produced for a commercial Web \{CASE\} tool.},
	booktitle = {Web {Engineering}, {Proceedings}},
	publisher = {Springer},
	author = {Baresi, L. and Fraternali, P. and Tisi, M. and Morasca, S.},
	year = {2005},
	note = {ISSN: 03029743},
	keywords = {web, read, my-conference},
	pages = {75--86},
	file = {PDF:/Users/max/Zotero/storage/F3GUPLPC/Baresi et al. - 2005 - Towards Model-driven Testing of a Web Application Generator.pdf:application/pdf},
}

@inproceedings{fraternali_automating_2006,
	address = {New York, New York, USA},
	title = {Automating {Function} {Point} {Analysis} with {Model} {Driven} {Development}},
	copyright = {All rights reserved},
	url = {http://portal.acm.org/citation.cfm?id=1188990},
	doi = {10.1145/1188966.1188990},
	booktitle = {Proceedings of the 2006 conference of the {Center} for {Advanced} {Studies} on {Collaborative} research - {CASCON} '06},
	publisher = {ACM Press},
	author = {Fraternali, Piero and Tisi, Massimo and Bongio, Aldo},
	year = {2006},
	keywords = {web, my-conference},
	pages = {18},
	file = {PDF:/Users/max/Zotero/storage/3AL59PQE/Fraternali, Tisi, Bongio - 2006 - Automating Function Point Analysis with Model Driven Development.pdf:application/pdf},
}

@inproceedings{Tisi2013,
	title = {Parallel execution of {ATL} transformation rules},
	volume = {8107 LNCS},
	copyright = {All rights reserved},
	isbn = {978-3-642-41532-6},
	doi = {10.1007/978-3-642-41533-3_40},
	booktitle = {Model-{Driven} {Engineering} {Languages} and {Systems}: 16th {International} {Conference}, {MODELS} 2013, {Miami}, {FL}, {USA}, {September} 29 -- {October} 4, 2013. {Proceedings}},
	author = {Tisi, Massimo and Martínez, Salvador and Choura, Hassene},
	year = {2013},
	keywords = {atl, c2r, my-conference},
	pages = {656--672},
	file = {PDF:/Users/max/Zotero/storage/Y9U9R5WX/Tisi, Martínez, Choura - 2013 - Parallel execution of ATL transformation rules.pdf:application/pdf},
}

@inproceedings{Benelallam2014,
	title = {{Neo4EMF}, {A} scalable persistence layer for {EMF} models},
	volume = {8569 LNCS},
	copyright = {All rights reserved},
	isbn = {978-3-319-09194-5},
	url = {http://hal.archives-ouvertes.fr/hal-00968516/},
	doi = {10.1007/978-3-319-09195-2_15},
	abstract = {Several industrial contexts require software engineering methods and tools able to handle large-size artifacts. The central idea of abstraction makes model-driven engineering (MDE) a promising approach in such contexts, but current tools do not scale to very large models (VLMs): already the task of storing and accessing VLMs from a persisting support is currently inefficient. In this paper we propose a scalable persistence layer for the de-facto standard MDE framework EMF. The layer exploits the efficiency of graph databases in storing and accessing graph structures, as EMF models are. A preliminary experimentation shows that typical queries in reverse-engineering EMF models have good performance on such persistence layer, compared to file-based backends. © 2014 Springer International Publishing Switzerland.},
	booktitle = {Lecture {Notes} in {Computer} {Science} (including subseries {Lecture} {Notes} in {Artificial} {Intelligence} and {Lecture} {Notes} in {Bioinformatics})},
	author = {Benelallam, Amine and Gómez, Abel and Sunyé, Gerson and Tisi, Massimo and Launay, David},
	year = {2014},
	keywords = {neoemf, my-conference},
	pages = {230--241},
	file = {PDF:/Users/max/Zotero/storage/DJTBZZ6M/Benelallam et al. - 2014 - Neo4EMF, A scalable persistence layer for EMF models.pdf:application/pdf},
}

@inproceedings{Gomez2015a,
	title = {Map-{Based} {Transparent} {Persistence} for {Very} {Large} {Models}},
	volume = {9033},
	copyright = {All rights reserved},
	isbn = {978-3-662-46674-2},
	url = {http://dx.doi.org/10.1007/978-3-662-46675-9_2},
	doi = {10.1007/978-3-662-46675-9_2},
	abstract = {The progressive industrial adoption of Model-Driven Engineering (MDE) is fostering the development of large tool ecosystems like the Eclipse Modeling project. These tools are built on top of a set of base technologies that have been primarily designed for small-scale scenarios, where models are manually developed. In particular, efficient runtime manipulation for large-scale models is an under-studied problem and this is hampering the application of MDE to several industrial scenarios. In this paper we introduce and evaluate a map-based persistence model for MDE tools. We use this model to build a transparent persistence layer for modeling tools, on top of a map-based database engine. The layer can be plugged into the Eclipse Modeling Framework, lowering execution times and memory consumption levels of other existing approaches. Empirical tests are performed based on a typical industrial scenario, model-driven reverse engineering, where very large software models originate from the analysis of massive code bases. The layer is freely distributed and can be immediately used for enhancing the scalability of any existing Eclipse Modeling tool.},
	booktitle = {Fundamental {Approaches} to {Software} {Engineering}},
	author = {Gómez, Abel and Tisi, Massimo and Sunyé, Gerson and Cabot, Jordi},
	year = {2015},
	note = {ISSN: 01676423},
	keywords = {Model Driven Engineering, Model Persistence, Very, neoemf, my-conference},
	pages = {19--34},
	file = {PDF:/Users/max/Zotero/storage/2G7MHJME/Gómez et al. - 2015 - Map-Based Transparent Persistence for Very Large Models.pdf:application/pdf},
}

@inproceedings{Mottu2012,
	title = {Static analysis of model transformations for effective test generation},
	copyright = {All rights reserved},
	isbn = {978-0-7695-4888-3},
	url = {http://hal.univ-nantes.fr/hal-00752412/},
	doi = {10.1109/ISSRE.2012.7},
	abstract = {Model transformations are an integral part of several computing systems that manipulate interconnected graphs of objects called models in an input domain specified by a metamodel and a set of invariants. Test models are used to look for faults in a transformation. A test model contains a specific set of objects, their interconnections and values for their attributes. Can we automatically generate an effective set of test models using knowledge from the transformation? We present a white-box testing approach that uses static analysis to guide the automatic generation of test inputs for transformations. Our static analysis uncovers knowledge about how the input model elements are accessed by transformation operations. This information is called the input metamodel footprint due to the transformation. We transform footprint, input metamodel, its invariants, and transformation pre-conditions to a constraint satisfaction problem in Alloy. We solve the problem to generate sets of test models containing traces of the footprint. Are these test models effective? With the help of a case study transformation we evaluate the effectiveness of these test inputs. We use mutation analysis to show that the test models generated from footprints are more effective (97.62\% avg. mutation score) in detecting faults than previously developed approaches based on input domain coverage criteria (89.9\% avg.) and unguided generation (70.1\% avg.). ? 2012 IEEE.},
	urldate = {2013-02-08},
	booktitle = {Proceedings - {International} {Symposium} on {Software} {Reliability} {Engineering}, {ISSRE}},
	author = {Mottu, J.-M. and Sen, S. and Tisi, M. and Cabot, J.},
	year = {2012},
	keywords = {testing, [Alloy, Automatic model completion, Model transfor, c2r, my-conference},
	file = {PDF:/Users/max/Zotero/storage/YHM7DYTX/Mottu et al. - 2012 - Static analysis of model transformations for effective test generation.pdf:application/pdf},
}

@inproceedings{hidaka:hal-01566259,
	address = {Austin, Texas, United States},
	title = {On {Additivity} in {Transformation} {Languages}},
	copyright = {All rights reserved},
	isbn = {978-1-5386-3492-9},
	url = {https://hal.archives-ouvertes.fr/hal-01566259},
	doi = {10.1109/MODELS.2017.21},
	booktitle = {2017 {ACM}/{IEEE} 20th {International} {Conference} on {Model} {Driven} {Engineering} {Languages} and {Systems} ({MODELS})},
	publisher = {IEEE},
	author = {Hidaka, Sochiro and Jouault, Frederic and Tisi, Massimo},
	month = sep,
	year = {2017},
	keywords = {c2r, atlgt, my-conference},
	pages = {23--33},
	file = {Full Text:/Users/max/Zotero/storage/Q32YQ4YC/Hidaka et al. - 2017 - On Additivity in Transformation Languages.pdf:application/pdf},
}

@inproceedings{cheng:hal-01435974,
	address = {Tokyo, Japan},
	title = {Incremental {Deductive} {Verification} for {Relational} {Model} {Transformations}},
	copyright = {All rights reserved},
	url = {https://hal.archives-ouvertes.fr/hal-01435974},
	booktitle = {{ICST} 2017 - 10th {IEEE} {International} {Conference} on {Software} {Testing}, {Verification} and {Validation}},
	author = {Cheng, Zheng and Tisi, Massimo},
	month = mar,
	year = {2017},
	keywords = {veriatl, my-conference},
	file = {Full Text:/Users/max/Zotero/storage/YSUQI8DT/Cheng and Tisi - 2017 - Incremental Deductive Verification for Relational .pdf:application/pdf},
}

@inproceedings{tisi:hal-01435977,
	address = {Uppsala, Sweden},
	title = {A {Deductive} {Approach} for {Fault} {Localization} in {ATL} {Model} {Transformations}},
	copyright = {All rights reserved},
	url = {https://hal.archives-ouvertes.fr/hal-01435977},
	booktitle = {{FASE} 2017 - 20th {International} {Conference} on {Fundamental} {Approaches} to {Software} {Engineering}},
	author = {Tisi, Massimo and Cheng, Zheng},
	month = apr,
	year = {2017},
	keywords = {veriatl, my-conference},
	file = {Full Text:/Users/max/Zotero/storage/QV7FINAV/Tisi and Cheng - 2017 - A Deductive Approach for Fault Localization in ATL.pdf:application/pdf},
}

@inproceedings{Tisi2016,
	title = {Enabling {OCL} and {fUML} integration by transformation},
	volume = {9764},
	copyright = {All rights reserved},
	isbn = {978-3-319-42060-8},
	doi = {10.1007/978-3-319-42061-5_10},
	abstract = {? Springer International Publishing Switzerland 2016.Until the recent adoption of fUML, UML has lacked standard execution semantics. However, parts of UML models have always been executable: OCL expressions. They may notably be used to express contracts (i.e., invariants, pre- and post-conditions), to define side-effect free operations, and to specify how to compute derived features. Nonetheless, although fUML is partly inspired by OCL (notably for primitive behaviors), its specification does not consider interoperability with OCL expressions. Moreover, the semantics of OCL is specified independently of (f)UML, and their implementations are separate execution engines, hampering all global activities (e.g., analysis, optimization, debugging). This paper explores a possible integration approach of OCL and fUML: by transforming (i.e., compiling) OCL expressions into fUML activities we obtain a unified executable model. With this approach, operations specified in OCL can be called, and getters can be generated for derived features. Preconditions (resp. postconditions) can be automatically executed before (resp. after) the execution of their contextual operations. A precise semantics for invariant evaluation can be specified in fUML. Thanks to this work, OCL may also be seen as a functional counterpart to Alf.},
	booktitle = {Lecture {Notes} in {Computer} {Science} (including subseries {Lecture} {Notes} in {Artificial} {Intelligence} and {Lecture} {Notes} in {Bioinformatics})},
	author = {Tisi, Massimo and Jouault, Frédéric and Saidi, Zied and Delatour, Jérome},
	year = {2016},
	note = {ISSN: 16113349},
	keywords = {fuml, my-conference},
	pages = {156--172},
	file = {PDF:/Users/max/Zotero/storage/FQMVFMBP/Tisi et al. - 2016 - Enabling OCL and fUML integration by transformation.pdf:application/pdf},
}

@inproceedings{Benelallam2015a,
	title = {Distributed model-to-model transformation with {ATL} on {MapReduce}},
	copyright = {All rights reserved},
	isbn = {978-1-4503-3686-4},
	url = {http://doi.acm.org/10.1145/2814251.2814258},
	doi = {10.1145/2814251.2814258},
	abstract = {? 2015 ACM.Efficient procebing of very large models is a key requirement for the adoption of Model-Driven Engineering (MDE) in some industrial contexts. One of the central operations in MDE is rule-based model transformation (MT). It is used to specify manipulation operations over structured data coming in the form of model graphs. However, being based on computationally expensive operations like subgraph isomorphism, MT tools are facing ibues on both memory occupancy and execution time while dealing with the increasing model size and complexity. One way to overcome these ibues is to exploit the wide availability of distributed clusters in the Cloud for the distributed execution of MT. In this paper, we propose an approach to automatically distribute the execution of model transformations written in a popular MT language, ATL, on top of a well-known distributed programming model, MapReduce. We show how the execution semantics of ATL can be aligned with the MapReduce computation model. We describe the extensions to the ATL transformation engine to enable distribution, and we experimentally demonstrate the scalability of this solution in a reverse-engineering scenario.},
	booktitle = {Proceedings of the 2015 {ACM} {SIGPLAN} {International} {Conference} on {Software} {Language} {Engineering}, {SLE} 2015, {Pittsburgh}, {PA}, {USA}, {October} 25-27, 2015},
	author = {Benelallam, Amine and Gómez, Abel and Tisi, Massimo and Cabot, Jordi},
	year = {2015},
	keywords = {[ATL, Distributed Computing, Language Engineering, atlmr, my-conference},
	pages = {37--48},
	file = {PDF:/Users/max/Zotero/storage/FNH6WZE2/Benelallam et al. - 2015 - Distributed model-to-model transformation with ATL on MapReduce.pdf:application/pdf},
}

@inproceedings{Fraternali2010,
	title = {Multi-level {Tests} for {Model} {Driven} {Web} {Applications}},
	volume = {6189 \{\vphantom{\}}LNCS},
	copyright = {All rights reserved},
	isbn = {3642139108 {\textbar} 9783642139109},
	url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-77955032205&partnerID=40&md5=055e9ebf9e5fa13be55467358f4dd2eb},
	doi = {10.1007/978-3-642-13911-6_11},
	abstract = {Model Driven Engineering (\{MDE\}) advocates the use of models and transformations to support all the tasks of software development, from analysis to testing and maintenance. Modern \{MDE\} methodologies employ multiple models, to represent the different perspectives of the system at a progressive level of abstraction. In these situations, \{MDE\} frameworks need to work on a set of interdependent models and tranformations, which may evolve over time. This paper presents a model transformation framework capable of aligning two streams of transformations: the forward engineering stream that goes from the Computation Independent Model to the running code, and the testing stream that goes from the Computation Independent Test specification to an executable test script. The "vertical" transformations composing the two streams are kept aligned, by means of "horizontal" mappings that can be applied after a change in the modeling framework (e.g., an update in the \{PIM\}-to-code transformation due to a change in the target deployment technology). The proposed framework has been implemented and is under evaluation in a real-world \{MDE\} tool. © 2010 Springer-Verlag.},
	booktitle = {Lecture {Notes} in {Computer} {Science} (including subseries {Lecture} {Notes} in {Artificial} {Intelligence} and {Lecture} {Notes} in {Bioinformatics})},
	author = {Fraternali, Piero P.a and Tisi, Massimo M.b},
	year = {2010},
	keywords = {web, Model transformation, Models, \{WEB\} application, Code transformation, Computation independent model, Cosine transforms, Hydraulics, Level of abstraction, Model-driven, Model-driven Engineering, Modeling frameworks, Multi-level, Multiple models, Real-world, Software design, Software development, Test scripts, Test specifications, Testing and maintenance, Two-stream, my-conference},
	pages = {158--172},
	file = {PDF:/Users/max/Zotero/storage/4ATKHHBA/Fraternali, Tisi - 2010 - Multi-level Tests for Model Driven Web Applications(2).pdf:application/pdf},
}

@inproceedings{Wagelaar2011,
	title = {Towards a general composition semantics for rule-based model transformation},
	copyright = {All rights reserved},
	url = {http://link.springer.com/chapter/10.1007/978-3-642-24485-8_46},
	urldate = {2013-02-08},
	booktitle = {Model {Driven} {Engineering} {Languages} and {Systems}: 14th {International} {Conference}, {MODELS} 2011, {Wellington}, {New} {Zealand}, {October} 16-21, 2011. {Proceedings}},
	author = {Wagelaar, D and Tisi, M and Cabot, J and Jouault, F},
	year = {2011},
	keywords = {atl, no-example, my-conference},
	file = {PDF:/Users/max/Zotero/storage/L4MBRE5R/Wagelaar et al. - 2011 - Towards a general composition semantics for rule-based model transformation.pdf:application/pdf},
}

@inproceedings{Sen2012,
	title = {Using models of partial knowledge to test model transformations},
	volume = {7307 LNCS},
	copyright = {All rights reserved},
	isbn = {978-3-642-30475-0},
	doi = {10.1007/978-3-642-30476-7_2},
	abstract = {Testers often use partial knowledge to build test models. This knowledge comes from sources such as requirements, known faults, existing inputs, and execution traces. In Model-Driven Engineering, test inputs are models executed by model transformations. Modelers build them using partial knowledge while meticulously satisfying several well-formedness rules imposed by the modelling language. This manual process is tedious and language constraints can force users to create complex models even for representing simple knowledge. In this paper, we want to simplify the development of test models by presenting an integrated methodology and semi-automated tool that allow users to build only small partial test models directly representing their testing intent. We argue that partial models are more readable and maintainable and can be automatically completed to full input models while considering language constraints. We validate this approach by evaluating the size and fault-detecting effectiveness of partial models compared to traditionally-built test models. We show that they can detect the same bugs/faults with a greatly reduced development effort. © 2012 Springer-Verlag.},
	urldate = {2013-02-08},
	booktitle = {Lecture {Notes} in {Computer} {Science} (including subseries {Lecture} {Notes} in {Artificial} {Intelligence} and {Lecture} {Notes} in {Bioinformatics})},
	author = {Sen, Sagar and Mottu, Jean Marie and Tisi, Massimo and Cabot, Jordi},
	year = {2012},
	keywords = {testing, c2r, my-conference},
	pages = {24--39},
	file = {PDF:/Users/max/Zotero/storage/CR66XXBH/Sen et al. - 2012 - Using models of partial knowledge to test model transformations(2).pdf:application/pdf},
}

@inproceedings{Tisi2014,
	title = {{fUML} as an {Assembly} {Language} for {Model} {Transformation}},
	copyright = {All rights reserved},
	url = {http://link.springer.com/10.1007/978-3-319-11245-9_10},
	doi = {10.1007/978-3-319-11245-9_10},
	urldate = {2015-04-21},
	booktitle = {Software {Language} {Engineering}},
	author = {Tisi, Massimo and Jouault, Frédéric and Delatour, Jérôme and Saidi, Zied and Choura, Hassene},
	year = {2014},
	keywords = {fuml, c2r, my-conference},
	pages = {171--190},
	file = {PDF:/Users/max/Zotero/storage/9W45KNHX/Tisi et al. - 2014 - fUML as an Assembly Language for Model Transformation.pdf:application/pdf},
}

@inproceedings{Tisi2018,
	title = {{CoqTL}: {An} internal {DSL} for model transformation in {Coq}},
	volume = {10888 LNCS},
	copyright = {All rights reserved},
	isbn = {978-3-319-93316-0},
	doi = {10.1007/978-3-319-93317-7_7},
	abstract = {In model-driven engineering, model transformation (MT) verification is essential for reliably producing software artifacts. While recent advancements have enabled automatic Hoare-style verification for non-trivial MTs, there are certain verification tasks (e.g. induction) that are intrinsically difficult to automate. Existing tools that aim at simplifying the interactive verification of MTs typically translate the MT specification (e.g. in ATL) and properties to prove (e.g. in OCL) into an interactive theorem prover. However, since the MT specification and proof phases happen in separate languages, the proof developer needs a deep knowledge of the translation logic. Naturally any error in the MT translation could cause unsound verification, i.e. the MT executed in the original environment may have different semantics from the verified MT. We propose an alternative solution by designing and implementing an internal domain specific language, namely CoqTL, for the specification of declarative MTs directly in the Coq interactive theorem prover. Expressions in CoqTL are written in Gallina (the specification language of Coq), increasing the possibilities of reuse of native Coq libraries in the transformation definition and proof. In this paper we introduce CoqTL, we evaluate its practical applicability on a case study, and identify its limitations.},
	booktitle = {Lecture {Notes} in {Computer} {Science} (including subseries {Lecture} {Notes} in {Artificial} {Intelligence} and {Lecture} {Notes} in {Bioinformatics})},
	author = {Tisi, Massimo and Cheng, Zheng},
	year = {2018},
	note = {ISSN: 16113349},
	keywords = {Model transformation, Model-driven engineering, Coq, Interactive theorem proving, c2r, coqtl, my-conference},
	pages = {142--156},
	file = {Full Text:/Users/max/Zotero/storage/4AT3U62E/Tisi and Cheng - 2018 - CoqTL An internal DSL for model transformation in.pdf:application/pdf},
}

@inproceedings{philippeExecutingCertifiedModel2021,
	address = {Chicago IL USA},
	title = {Executing certified model transformations on {Apache} {Spark}},
	copyright = {All rights reserved},
	isbn = {978-1-4503-9111-5},
	url = {https://dl.acm.org/doi/10.1145/3486608.3486901},
	doi = {10.1145/3486608.3486901},
	abstract = {Formal reasoning on model transformation languages allows users to certify model transformations against contracts. CoqTL includes a specification of a transformation engine in the Coq interactive theorem prover. An executable engine can be automatically extracted from this specification. Transformation contracts are proved by the user against the CoqTL specification and guaranteed to hold on the transformation running on the extracted implementation of CoqTL. The design of the transformation engine specification in CoqTL aims at easing the certification step, but this requirement harms the execution performance of the extracted engine.},
	language = {en},
	urldate = {2022-05-07},
	booktitle = {Proceedings of the 14th {ACM} {SIGPLAN} {International} {Conference} on {Software} {Language} {Engineering}},
	publisher = {ACM},
	author = {Philippe, Jolan and Tisi, Massimo and Coullon, Hélène and Sunyé, Gerson},
	month = oct,
	year = {2021},
	keywords = {c2r, sparkte, my-conference},
	pages = {36--48},
	file = {Philippe et al. - 2021 - Executing certified model transformations on Apach.pdf:/Users/max/Zotero/storage/PLIMLLZK/Philippe et al. - 2021 - Executing certified model transformations on Apach.pdf:application/pdf},
}

@inproceedings{chengCertifyingRulebasedModel2020,
	address = {Virtual Event Canada},
	title = {Certifying a rule-based model transformation engine for proof preservation},
	copyright = {All rights reserved},
	isbn = {978-1-4503-7019-6},
	url = {https://dl.acm.org/doi/10.1145/3365438.3410949},
	doi = {10.1145/3365438.3410949},
	abstract = {Executable engines for relational model-transformation languages evolve continuously because of language extension, performance improvement and bug fixes. While new versions generally change the engine semantics, end-users expect to get backward-compatibility guarantees, so that existing transformations do not need to be adapted at every engine update. The CoqTL model-transformation language allows users to define model transformations, theorems on their behavior and machinechecked proofs of these theorems in Coq. Backward-compatibility for CoqTL involves also the preservation of these proofs. However, proof preservation is challenging, as proofs are easily broken even by small refactorings of the code they verify.},
	language = {en},
	urldate = {2022-05-07},
	booktitle = {Proceedings of the 23rd {ACM}/{IEEE} {International} {Conference} on {Model} {Driven} {Engineering} {Languages} and {Systems}},
	publisher = {ACM},
	author = {Cheng, Zheng and Tisi, Massimo and Hotonnier, Joachim},
	month = oct,
	year = {2020},
	keywords = {c2r, coqtl, my-conference},
	pages = {297--307},
	file = {Cheng et al. - 2020 - Certifying a rule-based model transformation engin.pdf:/Users/max/Zotero/storage/4E9SHW78/Cheng et al. - 2020 - Certifying a rule-based model transformation engin.pdf:application/pdf},
}

@inproceedings{berrouyneCyprIoTFrameworkModelling2019,
	address = {Limassol Cyprus},
	title = {{CyprIoT}: framework for modelling and controlling network-based {IoT} applications},
	copyright = {All rights reserved},
	isbn = {978-1-4503-5933-7},
	shorttitle = {{CyprIoT}},
	url = {https://dl.acm.org/doi/10.1145/3297280.3297362},
	doi = {10.1145/3297280.3297362},
	abstract = {Model-Driven Engineering (MDE) is a paradigm that favors using models to address software engineering problems. Very few attempts have been made to apply this paradigm to the Internet of Things (IoT). Most of the existing MDE approaches focus on abstracting the heterogeneity of IoT things while neglecting network communication heterogeneity. In fact, few attempts target network-based IoT applications. In this paper, we propose a framework, called CyprIoT, to model and control network-based IoT applications using MDE techniques. Our approach relies on 1) Networking Language, to model a network of IoT things 2) Rule-Based Policy Language, to control and supervise the behavior of the modeled network 3) Code Generator, to interpret the model and generate deployable network artifacts and 4) Plug-in System, to customize, enhance or implement expert knowledge into the generated artifacts.},
	language = {en},
	urldate = {2022-05-07},
	booktitle = {Proceedings of the 34th {ACM}/{SIGAPP} {Symposium} on {Applied} {Computing}},
	publisher = {ACM},
	author = {Berrouyne, Imad and Adda, Mehdi and Mottu, Jean-Marie and Royer, Jean-Claude and Tisi, Massimo},
	month = apr,
	year = {2019},
	keywords = {iot, my-conference},
	pages = {832--841},
	file = {Berrouyne et al. - 2019 - CyprIoT framework for modelling and controlling n.pdf:/Users/max/Zotero/storage/2ADWHIR4/Berrouyne et al. - 2019 - CyprIoT framework for modelling and controlling n.pdf:application/pdf},
}

@inproceedings{chengRemovingProblemsRuleBased2019,
	address = {Cham},
	title = {Removing {Problems} in {Rule}-{Based} {Policies}},
	volume = {562},
	copyright = {All rights reserved},
	isbn = {978-3-030-22311-3 978-3-030-22312-0},
	url = {http://link.springer.com/10.1007/978-3-030-22312-0_9},
	doi = {10.1007/978-3-030-22312-0_9},
	abstract = {Analyzing and ﬁxing problems of complex rule-based policies, like inconsistencies and conﬂicts, is a well-known topic in security. In this paper, by leveraging previous work on enumerating all the problematic requests for an inconsistent system, we deﬁne an operation on the policy that removes these problems. While the ﬁnal ﬁx remains a typically manual activity, removing conﬂicts allows the user to work on unambiguous policies, produced automatically. We prove the main properties of the problem removal operation on rule-based systems in ﬁrstorder logic. We propose an optimized process to automatically perform problem removal by reducing time and size of the policy updates. Finally we apply it to an administrative role-based access control (ARBAC) policy and an attribute-based access control (ABAC) policy, to illustrate its use and performance.},
	language = {en},
	urldate = {2022-05-07},
	booktitle = {{ICT} {Systems} {Security} and {Privacy} {Protection}},
	publisher = {Springer International Publishing},
	author = {Cheng, Zheng and Royer, Jean-Claude and Tisi, Massimo},
	editor = {Dhillon, Gurpreet and Karlsson, Fredrik and Hedström, Karin and Zúquete, André},
	year = {2019},
	note = {Series Title: IFIP Advances in Information and Communication Technology},
	keywords = {policies, my-conference},
	pages = {120--133},
	file = {Cheng et al. - 2019 - Removing Problems in Rule-Based Policies.pdf:/Users/max/Zotero/storage/MFAPPWL3/Cheng et al. - 2019 - Removing Problems in Rule-Based Policies.pdf:application/pdf},
}

@inproceedings{bezierslafosseAnnotatingExecutableDSLs2020,
	address = {Virtual USA},
	title = {Annotating executable {DSLs} with energy estimation formulas},
	copyright = {All rights reserved},
	isbn = {978-1-4503-8176-5},
	url = {https://dl.acm.org/doi/10.1145/3426425.3426930},
	doi = {10.1145/3426425.3426930},
	abstract = {Reducing the energy consumption of a complex, especially cyber-physical, system is a cross-cutting concern through the system layers, and typically requires long feedback loops between experts in several engineering disciplines. Having an immediate automatic estimation of the global system consumption at design-time would significantly accelerate this process, but cross-layer tools are missing in several domains. Executable domain-specific modeling languages (xDSLs) can be used to design several layers of the system under development in an integrated view. By including the behavioral specification for software and physical components of the system, they are an effective source artifact for cross-layer energy estimation.},
	language = {en},
	urldate = {2022-05-07},
	booktitle = {Proceedings of the 13th {ACM} {SIGPLAN} {International} {Conference} on {Software} {Language} {Engineering}},
	publisher = {ACM},
	author = {Béziers la Fosse, Thibault and Tisi, Massimo and Mottu, Jean-Marie and Sunyé, Gerson},
	month = nov,
	year = {2020},
	keywords = {Cyber-Physical Systems, Energy Estimation, XDSL, cps, my-conference},
	pages = {22--38},
	file = {Béziers la Fosse et al. - 2020 - Annotating executable DSLs with energy estimation .pdf:/Users/max/Zotero/storage/2NE4KGTX/Béziers la Fosse et al. - 2020 - Annotating executable DSLs with energy estimation .pdf:application/pdf},
}

@inproceedings{berrouyneModelDrivenApproachUnravel2020,
	address = {Cham},
	title = {A {Model}-{Driven} {Approach} to {Unravel} the {Interoperability} {Problem} of the {Internet} of {Things}},
	volume = {1151},
	copyright = {All rights reserved},
	isbn = {978-3-030-44040-4 978-3-030-44041-1},
	url = {http://link.springer.com/10.1007/978-3-030-44041-1_100},
	doi = {10.1007/978-3-030-44041-1_100},
	abstract = {The Internet of Things (IoT) aims for connecting Anything, Anywhere, Anytime (AAA). This premise brings about heterogeneity that creates connectivity challenges. These challenges constitutes a serious obstacle to interoperability between things. Most existing approaches tackles the interoperability problem by avoiding heterogeneity with standards at runtime. While heterogeneity is an intrinsic feature of the IoT, there is a need for an approach that embraces it to connect AAA. In this paper we propose a model-based methodology to tackle the interoperability problem. It relies on a Domain-Speciﬁc Language (DSL) for a model-based speciﬁcation of the network and a transformation process to generate the network artifacts from this speciﬁcation. The principle consists of achieving interoperability at the model-level, then during a transformation process, ensuring that it is preserved in the low-level code. Adopting this methodology makes the engineering of the IoT more rigorous, prevents bugs earlier and saves time.},
	language = {en},
	urldate = {2022-05-07},
	booktitle = {Advanced {Information} {Networking} and {Applications}},
	publisher = {Springer International Publishing},
	author = {Berrouyne, Imad and Adda, Mehdi and Mottu, Jean-Marie and Royer, Jean-Claude and Tisi, Massimo},
	editor = {Barolli, Leonard and Amato, Flora and Moscato, Francesco and Enokido, Tomoya and Takizawa, Makoto},
	year = {2020},
	note = {Series Title: Advances in Intelligent Systems and Computing},
	keywords = {iot, my-conference},
	pages = {1162--1175},
	file = {Berrouyne et al. - 2020 - A Model-Driven Approach to Unravel the Interoperab.pdf:/Users/max/Zotero/storage/K77Q6VAE/Berrouyne et al. - 2020 - A Model-Driven Approach to Unravel the Interoperab.pdf:application/pdf},
}

@inproceedings{tisiTwinDrivenEngineeringOverview2021,
	address = {Cham},
	title = {Towards {Twin}-{Driven} {Engineering}: {Overview} of the {State}-of-{The}-{Art} and {Research} {Directions}},
	volume = {630},
	copyright = {All rights reserved},
	isbn = {978-3-030-85873-5 978-3-030-85874-2},
	shorttitle = {Towards {Twin}-{Driven} {Engineering}},
	url = {https://link.springer.com/10.1007/978-3-030-85874-2_37},
	doi = {10.1007/978-3-030-85874-2_37},
	abstract = {Cyber-Physical Systems (CPS) are complex physical systems interacting with a considerable number of distributed computing elements for monitoring, control and management. They are currently becoming larger as CyberPhysical Systems of Systems (CPSoS), since many industrial companies are transitioning their complex systems of systems to software-intensive solutions in different domains such as production or manufacturing. Following the development and dissemination of DevOps approaches in the Software Engineering world, we propose the Twin-Driven Engineering (TDE) paradigm as a way to upgrade the role of Digital Twins (DT) to become a central point in all the engineering activities on the CPSoS, from design to decommissioning. Since CPSoS can be highly heterogeneous, we rather target the support for producing and maintaining a single integrated virtual representation of the CPSoS (i.e. a System of Twins) on which it is possible to perform global reasoning, analysis and verification. However, such a new paradigm comes with several open research challenges. We provide an overview of the state-of-the-art in key areas related to TDE. We identify under-investigated problems in related work and outline corresponding research directions.},
	language = {en},
	urldate = {2022-05-07},
	booktitle = {Advances in {Production} {Management} {Systems}. {Artificial} {Intelligence} for {Sustainable} and {Resilient} {Production} {Systems}},
	publisher = {Springer International Publishing},
	author = {Tisi, Massimo and Bruneliere, Hugo and de Lara, Juan and Di Ruscio, Davide and Kolovos, Dimitris},
	editor = {Dolgui, Alexandre and Bernard, Alain and Lemoine, David and von Cieminski, Gregor and Romero, David},
	year = {2021},
	note = {Series Title: IFIP Advances in Information and Communication Technology},
	keywords = {Cyber-Physical Systems, State-of-the-Art, Research Directions, Systems of Systems, Twin-Driven Engineering, cps, my-conference},
	pages = {351--359},
	file = {Full Text:/Users/max/Zotero/storage/MGGGFWDP/Tisi et al. - 2021 - Towards Twin-Driven Engineering Overview of the S.pdf:application/pdf;Tisi et al. - 2021 - Towards Twin-Driven Engineering Overview of the S.pdf:/Users/max/Zotero/storage/SA55QT63/Tisi et al. - 2021 - Towards Twin-Driven Engineering Overview of the S.pdf:application/pdf},
}

@inproceedings{10.1007/978-3-662-46078-8_35,
	address = {Berlin, Heidelberg},
	title = {A model-driven approach to generate external {DSLs} from object-oriented {APIs}},
	copyright = {All rights reserved},
	isbn = {978-3-662-46078-8},
	abstract = {Developers in modern general-purpose programming languages create reusable code libraries by encapsulating them in Applications Programming Interfaces (APIs). Domain-specific languages (DSLs) can be developed as an alternative method for code abstraction and distribution, sometimes preferable to APIs because of their expressivity and tailored development environment. However the cost of implementing a fully functional development environment for a DSL is generally higher. In this paper we propose DSLit, a prototype-tool that, given an existing API, reduces the cost of developing a corresponding DSL by analyzing the API, automatically generating a semantically equivalent DSL with its complete development environment, and allowing for user customization. To build this bridge between the API and DSL technical spaces we make use of existing Model-Driven Engineering (MDE) techniques, further promoting the vision of MDE as a unifying technical space.},
	booktitle = {{SOFSEM} 2015: {Theory} and practice of computer science},
	publisher = {Springer Berlin Heidelberg},
	author = {Cosentino, Valerio and Tisi, Massimo and Izquierdo, Javier Luis Cánovas},
	editor = {Italiano, Giuseppe F. and Margaria-Steffen, Tiziana and Pokorný, Jaroslav and Quisquater, Jean-Jacques and Wattenhofer, Roger},
	year = {2015},
	keywords = {dsls, my-conference},
	pages = {423--435},
	file = {PDF:/Users/max/Zotero/storage/7YFKJKHD/Cosentino, Tisi, Izquierdo - 2015 - A model-driven approach to generate external DSLs from object-oriented APIs.pdf:application/pdf},
}

@inproceedings{benelallamEfficientModelPartitioning2016,
	title = {Efficient {Model} {Partitioning} for {Distributed} {Model} {Transformations}},
	copyright = {All rights reserved},
	url = {https://hal.inria.fr/hal-01367572},
	abstract = {As the models that need to be handled in model-driven engineering grow in scale, scalable algorithms for model transformation (MT) are becoming necessary. Programming models such as MapReduce or Pregel may simplify the development of distributed model transformations. However, because of the dense inter-connectivity of models and the complexity of transformation logics, scalability in distributed model processing is challenging. In this paper, we adapt existing formalization of uniform graph partitioning to the case of distributed MTs by means of binary linear programming. Moreover, we propose a data distribution algorithm for declarative model transformation based on static analysis of relational transformation rules. We first extract footprints from transformation rules. Then we propose a fast data distribution algorithm, driven by the extracted footprints, and based on recent results on balanced partitioning of streaming graphs. To validate our approach, we apply it to an existing distributed MT engine for the ATL language, built on top of MapReduce. We implement our heuristic as a custom split algorithm for ATL on MapReduce and we evaluate its impact on remote access to the underlying backend.},
	language = {en},
	urldate = {2022-05-07},
	author = {Benelallam, Amine and Tisi, Massimo and Cuadrado, Jesús Sánchez and Lara, Juan de and Cabot, Jordi},
	month = oct,
	year = {2016},
	keywords = {atlmr, my-conference},
	file = {Snapshot:/Users/max/Zotero/storage/DMF7VNKD/hal-01367572.html:text/html},
}

@inproceedings{chengEfficientlyCharacterizingUndefined2018,
	address = {Maynooth, Ireland},
	series = {{LNCS}},
	title = {Efficiently {Characterizing} the {Undefined} {Requests} of a {Rule}-{Based} {System}},
	volume = {11023},
	copyright = {All rights reserved},
	url = {https://hal.inria.fr/hal-01828305},
	doi = {10.1007/978-3-319-98938-9_5},
	urldate = {2023-01-07},
	booktitle = {{IFM} 2018 - 14th {International} {Conference} on integrated {Formal} {Methods}},
	publisher = {Springer},
	author = {Cheng, Zheng and Royer, Jean-Claude and Tisi, Massimo},
	month = sep,
	year = {2018},
	keywords = {policies, my-conference},
	pages = {69--88},
	file = {Full Text:/Users/max/Zotero/storage/BRA95C4S/Cheng et al. - 2018 - Efficiently Characterizing the Undefined Requests .pdf:application/pdf},
}

@inproceedings{pontes_miranda_towards_2024,
	address = {Avila Spain},
	title = {Towards the {Integration} {Support} for {Machine} {Learning} of {Inter}-{Model} {Relations} in {Model} {Views}},
	copyright = {All rights reserved},
	isbn = {9798400702433},
	url = {https://dl.acm.org/doi/10.1145/3605098.3636143},
	doi = {10.1145/3605098.3636143},
	abstract = {Model-driven engineering (MDE) supports the engineering of complex systems via multiple models representing various systems’ aspects. These interrelated models are usually heterogeneous and often specified using complementary modeling languages. Whenever needed, model view solutions can be employed to federate these models in a more transparent way. To do so, the required inter-model links can sometimes be automatically computed via explicitly written matching rules. However, in some cases, matching rules would be too complex (or even impossible) to write. Thus, some inter-model links may be inferred by analyzing previous examples instead. In this paper, we introduce a Machine Learning (ML)backed approach for expressing and computing such model views. Notably, we aim at making the use of ML as simple as possible in this context. To this end, we propose to refine and extend the ViewPoint Definition Language (VPDL) from the EMF Views model view solution to integrate the use of dedicated Heterogeneous Graph Neural Networks (HGNNs). These view-specific HGNNs can be trained with appropriate sets of contributing models before being used for inferring links to be added to the views.},
	language = {en},
	urldate = {2024-06-27},
	booktitle = {Proceedings of the 39th {ACM}/{SIGAPP} {Symposium} on {Applied} {Computing}},
	publisher = {ACM},
	author = {Pontes Miranda, James and Bruneliere, Hugo and Tisi, Massimo and Sunyé, Gerson},
	month = apr,
	year = {2024},
	keywords = {my-conference},
	pages = {1304--1306},
	file = {Pontes Miranda et al. - 2024 - Towards the Integration Support for Machine Learni.pdf:/Users/max/Zotero/storage/7RJLYEYD/Pontes Miranda et al. - 2024 - Towards the Integration Support for Machine Learni.pdf:application/pdf},
}

@inproceedings{hidaka_partial_2024,
	address = {Linz, Austria},
	title = {Partial {Bidirectionalization} of {Model} {Transformation} {Languages}},
	booktitle = {Proceedings of the 27th {ACM}/{IEEE} {International} {Conference} on {Model} {Driven} {Engineering} {Languages} and {Systems}},
	publisher = {ACM},
	author = {Hidaka, Soichiro and Tisi, Massimo},
	month = sep,
	year = {2024},
	keywords = {my-conference},
}
